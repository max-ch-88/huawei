Task 2 (Set parameters for VPN properly so that the traffic between spoke devices (CE3 and CE4) must pass through the hub CEs.)


HUB-PE1:

ip vpn-instance VPN1_IMPORT
route-distinguisher 1:11
vpn-target 100:1 (200:1 (Additional task 1.Adjust RT attributes of PE1, if the link between CE1 and PE1 is disconnected, PE1 can still learn the route to CE1.)) import-extcommunity

ip vpn-instance VPN1_EXPORT
route-distinguisher 1:12
vpn-target 200:1 export-extcommunity
--------------------------------------------------------

HUB-PE2:
ip vpn-instance VPN1_IMPORT
route-distinguisher 1:21
vpn-target 100:1 import-extcommunity

ip vpn-instance VPN1_EXPORT
route-distinguisher 1:22
vpn-target 200:1 export-extcommunity

--------------------------------------------------------

SPOKE-PE4:
ip vpn-instance VPN1
route-distinguisher 1:4
vpn-target 100:1 export-extcommunity
vpn-target 200:1 import-extcommunity

SPOKE-PE3:
ip vpn-instance VPN1
route-distinguisher 1:3
vpn-target 100:1 export-extcommunity
vpn-target 200:1 import-extcommunity
=============================================================================================

Task 3/4 (Configure CE1/CE2 to establish direct EBGP peer relationships with PE1/PE2 through GE0/0/1 and GE0/0/2. 
CE1/CE2 advertise the routes of Spoke sites back to PE1/PE2 through GE0/0/2. 
On CE1/CE2, import OSPF routes (loopbacks0 interfaces CE1 and CE2 and also LAN network between CE1 and CE2 (192.168.12.0/24)) to BGP. 


HUB-CE1/CE2

bgp 65430
peer (PE1/PE2 first interface) as-number 100
peer (PE1/PE2 second interface) as-number 100
peer (PE1/PE2 first interface) advertise-community
peer (PE1/PE2 second interface) advertise-community
import-route ospf 1


HUB-PE1/PE2

interface GigabitEthernet0/0/1
ip binding vpn-instance VPN1_IMPORT
ip address ......


interface GigabitEthernet0/0/2
ip binding vpn-instance VPN1_EXPORT
ip address ........

bgp 100
ipv4-family vpn-instance VPN1_IMPORT
peer (CE1/CE2 GigabitEthernet0/0/1)  as-number 65430
peer (CE1/CE2 GigabitEthernet0/0/1) advertise-community
#
ipv4-family vpn-instance VPN1_EXPORT
peer (CE1/CE2 GigabitEthernet0/0/2) as-number 65430
peer (CE1/CE2 GigabitEthernet0/0/2) advertise-community
peer (CE1/CE2 GigabitEthernet0/0/2) allow-as-loop

----------------------------------------------------------------------------------------

Task 10. On CE1 and CE2, import BGP routes to OSPF. 
The configuration should have the best scalability to solve issue caused by dual-node bi-directional route importing.


HUB-CE1

ip community-filter 1 permit 65430:5

route-policy B2O deny node 10
if-match community-filter 1
route-policy B2O permit node 20
apply tag 5

route-policy O2B deny node 10
if-match tag 5
route-policy O2B permit node 20
apply community 65430:5

bgp 65430
peer (PE1 first interface) advertise-community
peer (PE1 second interface) advertise-community
import-route ospf 1 route-policy O2B

ospf 1
import-route bgp route-policy B2O

----------------

HUB-CE2

ip community-filter 1 permit 65430:5

route-policy B2O deny node 10
if-match community-filter 1
route-policy B2O permit node 20
apply tag 5

route-policy O2B deny node 10
if-match tag 5
route-policy O2B permit node 20
apply community 65430:5

bgp 65430
import-route ospf 1 route-policy O2B
peer (PE2 first interface) advertise-community
peer (PE2 second interface) advertise-community

ospf 1
import-route bgp route-policy B2O
----------------

RR
bgp 100
peer PE1 advertise-community
peer PE2 advertise-community

=========================================================================

Task 11. 
CE2, CE3 and CE4 must learn default route generated by CE1. 


HUB-CE1:

bgp 65430
default-route imported
import-route static
ospf 1
default-route-advertise


SPOKE-PE3:

ospf (prcocess for № PE3-CE3 ) vpn-instance VPN1
default-route-advertise


SPOKE-PE4:

ospf (prcocess for № PE4-CE4) vpn-instance VPN1
default-route-advertise
